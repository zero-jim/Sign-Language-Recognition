function [BW,maskedImage] = segmentImage(RGB)
%% segmentImage Segment image using auto-generated code from imageSegmenter App
%  [BW,MASKEDIMAGE] = segmentImage(RGB) segments image RGB using
%  auto-generated code from the imageSegmenter App. The final segmentation
%  is returned in BW, and a masked image is returned in MASKEDIMAGE.

% Auto-generated by imageSegmenter app on 13-Jul-2018
%----------------------------------------------------


%% Convert RGB image into L*a*b* color space.
X = rgb2lab(RGB);

%% Graph Cut
foregroundInd = [3855 3862 4070 4679 4848 5086 5645 5695 6305 6907 7039 7509 7662 7679 7862 7878 7879 8034 8261 8461 8661 8675 8861 9045 9047 9048 9049 9060 9061 9080 9243 9251 9252 9253 9254 9433 9441 9453 9460 9641 9653 9660 9853 9860 10041 10058 10060 10138 10253 10258 10270 10441 10632 10640 10658 10853 11040 11431 11458 11468 11638 11652 11734 11736 11737 11738 11739 11886 11940 12025 12026 12067 12237 12258 12267 12436 12452 12458 12546 12625 12652 12691 12852 12867 12892 13026 13052 13067 13093 13132 13235 13252 13279 13280 13281 13426 13458 13470 13471 13476 13478 13481 13540 13652 13672 13673 13674 13681 13695 13713 13771 14035 14052 14081 14099 14153 14226 14252 14281 14460 14481 14504 14510 14627 14660 14681 14834 14851 14881 15027 15034 15051 15060 15081 15115 15227 15251 15281 15303 15428 15493 15570 15634 15651 15660 15681 15735 15765 15860 15881 15989 16060 16069 16081 16125 16229 16235 16250 16260 16282 16299 16460 16481 16482 16496 16497 16550 16583 16660 16697 16766 16836 16878 16901 16972 17060 17073 17076 17173 17175 17179 17181 17250 17270 17271 17347 17374 17383 17384 17428 17437 17450 17468 17469 17585 17628 17651 17664 17665 17707 17735 17839 17853 17855 17858 17862 17985 18060 18228 18240 18386 18641 18660 18714 18786 18841 18986 19028 19042 19060 19185 19243 19244 19260 19320 19375 19380 19428 19445 19461 19483 19484 19494 19495 19585 19647 19661 19678 19679 19681 19697 19704 19877 19906 19907 20029 20047 20048 20049 20050 20072 20076 20108 20157 20251 20252 20265 20266 20310 20464 20535 20580 20656 20661 20662 20832 20942 21184 21233 21330 21521 21580 21663 21713 21724 21747 21906 21925 21926 21951 22129 22151 22183 22265 22434 22493 22834 22934 23069 23183 23383 23437 23499 23582 23738 23740 23839 24136 24158 24262 24346 24442 24778 25059 25472 25559 25648 25762 25963 26077 26176 26371 26575 26989 27271 27773 32576 35591 ];
backgroundInd = [860 863 871 872 907 910 1074 1075 1099 1111 1278 1393 1394 1395 1483 1486 1593 1597 1723 1729 1742 1746 1747 1797 1949 1992 1998 2022 2073 2074 2075 2076 2078 2150 2269 2272 2392 2397 2467 2591 2592 2790 2791 2799 2854 2855 2856 2857 2858 2859 2860 2861 2863 2885 2988 2989 2991 2999 3053 3191 3244 3286 3287 3294 3295 3298 3329 3332 3337 3435 3436 3437 3438 3439 3504 3523 3524 3540 3587 3592 3633 3708 3794 3798 3941 3962 3996 3998 4197 4228 4511 4541 5312 5513 5514 5541 5917 5939 5972 6121 6139 6223 6521 6543 6544 6545 6922 7122 7123 7129 7325 7352 7378 7573 7578 7579 7728 7730 7735 7736 7737 7750 7819 7933 7934 8137 8547 8565 8971 8972 9016 9153 9154 9157 9216 9415 9416 9615 9969 10014 10172 10214 10414 10577 10614 10815 11183 11385 11386 11387 11613 11815 12016 12218 12219 12220 12391 12420 12994 13017 13594 14411 14413 14414 14614 15009 15414 15608 16208 16413 16809 17211 17813 17814 18200 18214 18614 19011 19214 19414 20213 21013 21410 21413 22817 23011 23410 23611 24012 24023 24826 25024 25025 25209 25213 25226 26028 26029 26228 26429 26433 26635 26836 27014 27038 27239 27409 27815 28043 28209 28239 28319 28713 28809 29008 29049 29108 29208 29451 29609 29704 29821 29853 30102 30459 30515 30516 30518 30611 30696 30862 31063 31109 31123 31266 31470 31501 31671 31888 31899 32072 32131 32214 32283 32284 32285 32334 32475 32476 32480 32536 32630 32853 32886 32939 33140 33540 33617 33636 33638 33840 33907 34078 34141 34245 34246 34449 34473 34474 34660 34666 34670 34671 34672 34742 34937 34942 35102 35108 35112 35114 35122 35130 35221 35404 35494 35884 36268 36424 36458 36463 36646 36652 36825 36826 36828 36833 38005 39955 39981 ];
L = superpixels(X,150,'IsInputLab',true);

%& Convert L*a*b* range to [0 1]
scaledX = X;
scaledX(:,:,1) = X(:,:,1) / 100;
scaledX(:,:,2:3) = (X(:,:,2:3) + 100) / 200;
BW = lazysnapping(scaledX,L,foregroundInd,backgroundInd);

%% Graph Cut
foregroundInd = [4060 5278 5279 5280 5673 5677 5683 5883 5884 6453 6479 6486 6487 6488 6645 6845 6863 6864 6888 7034 7036 7038 7051 7234 7273 7274 7275 7288 7434 7485 7634 7638 7639 7675 7678 7690 7833 7891 7899 8040 8060 8080 8097 8098 8285 8296 8431 8440 8496 8640 8652 8653 8654 8663 8840 9041 9228 9260 9428 9429 9479 9629 9644 9829 9871 9891 10029 10079 10080 10097 10098 10229 10243 10244 10246 10262 10298 10299 10300 10304 10305 10306 10429 10444 10539 10541 10543 10545 10630 10680 10688 10715 10724 10747 10854 10950 11069 11070 11071 11072 11135 11230 11356 11430 11631 11686 12064 12089 12110 12258 12259 12261 12270 12293 12485 12496 12685 12687 12689 12691 12695 12737 12749 12750 12761 12834 12875 12894 12950 12959 13047 13069 13072 13081 13265 13271 13272 13283 13296 13353 13369 13372 13373 13375 13436 13437 13441 13498 13502 13525 13574 13575 13656 13667 13754 13757 13758 13932 13935 13958 13978 14060 14070 14071 14138 14280 14452 14458 14459 14533 14560 14561 14751 14958 14962 15048 15068 15084 15099 15165 15166 15168 15171 15348 15352 15368 15385 15467 15499 15568 15640 15655 15692 15751 15867 15900 15967 15969 16043 16254 16315 16362 16390 16438 16439 16454 16471 16472 16473 16476 16477 16504 16507 16590 16654 16655 16675 16707 16709 16717 16759 16789 16853 16858 16866 16908 16911 16915 17049 17050 17056 17065 17082 17086 17088 17107 17109 17259 17261 17262 17307 17464 17465 17466 17544 17559 17669 17704 17713 17716 17717 17832 17915 18030 18054 18069 18077 18082 18086 18151 18184 18307 18308 18334 18335 18430 18454 18457 18465 18492 18508 18519 18536 18542 18550 18651 18695 18720 18740 18752 18754 18891 18951 18955 19055 19106 19259 19359 19463 19489 19502 19509 19510 19512 19513 19579 19632 19638 19639 19642 19657 19667 19684 19686 19712 19720 19721 19722 19724 19735 19742 19748 19750 19753 19759 19760 19863 19886 19895 20083 20086 20101 20247 20271 20281 20298 20698 20779 20835 20877 20882 21040 21052 21064 21099 21236 21240 21254 21259 21260 21261 21299 21307 21363 21369 21370 21379 21451 21474 21498 21579 21650 21673 21757 21779 21840 21854 21872 21873 21955 22042 22044 22045 22050 22111 22152 22170 22250 22271 22312 22348 22379 22476 22477 22479 22513 22536 22546 22579 22648 22655 22714 22733 22736 22738 22742 22744 22845 22846 22849 22875 22915 23053 23074 23075 23117 23118 23131 23302 23320 23329 23331 23371 23448 23458 23472 23523 23525 23542 23544 23689 23745 23778 23887 23947 23948 24039 24040 24045 24087 24131 24132 24133 24136 24149 24287 24459 24485 24552 24657 24755 24774 24776 24777 24778 24790 24791 24857 24971 25057 25075 25076 25077 25088 25354 25361 25467 25561 25562 25590 25657 25658 25659 25662 25671 25763 25764 25769 26766 27186 27366 27374 27375 27573 27771 27773 27776 27777 27779 27973 28181 28380 28582 28782 28982 29182 29380 29580 29582 29585 30581 30787 30977 30988 31993 32381 32394 32975 33375 33599 33775 33781 34176 34777 35177 35381 35578 36380 36982 37182 37382 37582 37982 37984 38786 38987 ];
backgroundInd = [188 189 387 391 843 853 1029 1054 1055 1198 1224 1263 1416 1417 1419 1420 1467 1468 1469 1470 1472 1478 1665 1679 1686 1687 1792 1793 1796 1842 1843 1888 1892 1996 1997 2029 2038 2063 2091 2192 2300 2382 2430 2500 2501 2582 2597 2625 2659 2700 2702 2703 2706 2792 2823 2850 2852 2855 2856 2910 2912 2917 2992 3021 3022 3040 3193 3194 3195 3221 3235 3396 3397 3435 3620 3696 3699 3704 3820 3940 4137 4196 4220 4231 4314 4553 4554 4746 4747 4820 5220 5323 5351 5353 5394 5421 5422 5425 5744 5941 5943 6141 6341 6392 6621 6729 6741 6780 6785 6790 6791 6930 6941 6978 7020 7131 7132 7143 7161 7186 7219 7336 7544 7615 7620 7747 7748 7751 7787 7957 8363 8367 8571 8588 8612 8790 9177 9393 9410 9609 9808 9986 10207 10791 10995 10996 10997 10998 11805 12016 12805 13200 13205 13405 13603 14202 16014 16204 18810 20212 20214 20612 20812 21210 22804 23817 24024 25005 28423 28612 29414 29614 29814 30614 31038 31325 31329 31460 31505 31506 31515 31530 31604 31705 31904 32101 32215 32282 32283 32289 32324 32526 32530 32926 32930 34004 34532 35217 35741 35742 35943 36005 36618 36711 36712 36713 36716 36820 37103 37146 37206 37226 37431 37634 38205 38237 38336 38475 39005 39007 39150 39151 39245 39408 39464 39654 39656 39657 39658 39659 39983 ];
L = superpixels(X,150,'IsInputLab',true);

%% Convert L*a*b* range to [0 1]
scaledX = X;
scaledX(:,:,1) = X(:,:,1) / 100;
scaledX(:,:,2:3) = (X(:,:,2:3) + 100) / 200;
BW = lazysnapping(scaledX,L,foregroundInd,backgroundInd);

%% Active contour using Chan-Vese over 200 iterations
iterations = 200;
BW = activecontour(X, BW, iterations, 'Chan-Vese');

%% Create masked image.
maskedImage = RGB;
maskedImage(repmat(~BW,[1 1 3])) = 0;